#+title:
#+author: Cristobal Garcia & Pau Cervera

* Intro

#+begin_quote
Functional programming is like describing your problem to a 
mathematician. Imperative programming is like giving instructions to an idiot.
#+end_quote

* What FP is

* Why FP matters

  - Multi core
* Simple complex
* 100 abstractions
* Nice things you can do with FP
* Persistent data structures
* Type checking
* Easy concurrent programming
* Railway oriented programming
* REPL-based coding
* Steps: minimal server

  - ability to start a server from REPL
  - logging via timbre
  - environments
  - add shutdown hook

* Request logging

  - add ring logger and ring logger timbre

* Routing

  - add compojure
  - enable swagger
  - not needed to enable anti-forgery for APIs
  - maybe x-requested-with

* Development

  - based on environ wrap-reload and wrap-stacktrace
  - immutant does not work with wrap-reload

* Enable selmer templates

  - set template path
  - Use template inheritance
